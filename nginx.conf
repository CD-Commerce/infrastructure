user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {}

http {
    # HTTPS server
    server {

        listen 443 ssl;
        server_name product-research.cd-commerce.cloud;


        # SSL
        ssl_certificate /etc/letsencrypt/live/product-research.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/product-research.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Reverse proxy to local server
        location / {
            auth_request /auth;
            auth_request_set $auth_redirect $upstream_http_location;
            error_page 401 = /auth_401;
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /auth {
            internal;
            proxy_pass http://127.0.0.1:6000;
            proxy_set_header Host $host;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location = /auth_401 {
            if ($auth_redirect) {
                return 302 $auth_redirect;
            }
            return 401;
        }
    }

    # HTTP server — redirect all to HTTPS
    server {
        listen 80;
        server_name product-research.cd-commerce.cloud;

        # redirect to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name auth.cd-commerce.cloud;

        # SSL
        ssl_certificate /etc/letsencrypt/live/auth.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/auth.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Reverse proxy to local server
        location / {
            proxy_pass http://127.0.0.1:6000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP server — redirect all to HTTPS
    server {
        listen 80;
        server_name auth.cd-commerce.cloud;

        # redirect to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server
    server {

        listen 443 ssl;
        server_name cogs.cd-commerce.cloud;


        # SSL
        ssl_certificate /etc/letsencrypt/live/cogs.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cogs.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Reverse proxy to local server
        location / {
            auth_request /auth;
            auth_request_set $auth_redirect $upstream_http_location;
            error_page 401 = /auth_401;
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /auth {
            internal;
            proxy_pass http://127.0.0.1:6000;
            proxy_set_header Host $host;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location = /auth_401 {
            if ($auth_redirect) {
                return 302 $auth_redirect;
            }
            return 401;
        }
    }

    # HTTP server — redirect all to HTTPS
    server {
        listen 80;
        server_name cogs.cd-commerce.cloud;

        # redirect to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
}